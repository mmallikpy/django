# CRUD
# D = Delete
# Delete data from database
# Before delete it will take confirmation

Step1: URL
path('delete/<int:pk>/', delete_fv, name='delete_fv-view'),

Step2: Model

class fvmodel(models.Model):
    name = models.CharField(max_length=200)
    email = models.EmailField()

Step3: view

from django.shortcuts import render, redirect, get_object_or_404
from .models import fvmodel

def delete_fv(request, pk):
    obj = get_object_or_404(fvmodel, pk=pk)
    if request.method == "POST":
        obj.delete()
        return redirect('dataread-view')
    return render(request, 'fv/confirm_delete.html', {'obj': obj})


Step4: html part
# This page is viewsdata page (viewsdata.html). We create delete button in this page, after click the button it will redirect the confirm_delete.html

<div class="container">
  <h1 class="text-primary mt-5 mb-5">View the data</h1>
  <table class="table">
    <thead>
      <tr>
        <th scope="col">#</th>
        <th scope="col">Name</th>
        <th scope="col">Email</th>
        <th scope="col">Actions</th>
      </tr>
    </thead>
    <tbody>
      {% for x in alldata %}
      <tr>
        <th scope="row">{{ forloop.counter }}</th>
        <td>{{ x.name }}</td>
        <td>{{ x.email }}</td>
        <td>
          <a
            type="submit"
            class="btn btn-secondary"
            href="{% url 'edit_fv-view' pk=x.pk %}"
          >
            Update
          </a>
          <a
            type="submit"
            class="btn btn-danger"
            href="{% url 'delete_fv-view' pk=x.pk %}"
          >
            Delete
          </a>
        </td>
      </tr>
      {% endfor %}
    </tbody>
  </table>
</div>


Step 5: html part confirm_delete.html

<div class="container">
  <h2>Are you sure you want to delete "{{ obj.name }}" ?</h2>
  <form method="post">
    {% csrf_token %}
    <button type="submit" class="btn btn-danger">Yes</button>
    <a href="{% url 'dataread-view' %}" class="btn btn-primary">Cancel</a>
  </form>
</div>
